/*
PersonaCMMS API

This is the Personal Computer Maintenance Management System REST API.

API version: 1.0
Contact: greenrivercodelabs@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TypesToolSize type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TypesToolSize{}

// TypesToolSize struct for TypesToolSize
type TypesToolSize struct {
	Size *string `json:"size,omitempty"`
}

// NewTypesToolSize instantiates a new TypesToolSize object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypesToolSize() *TypesToolSize {
	this := TypesToolSize{}
	return &this
}

// NewTypesToolSizeWithDefaults instantiates a new TypesToolSize object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypesToolSizeWithDefaults() *TypesToolSize {
	this := TypesToolSize{}
	return &this
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *TypesToolSize) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesToolSize) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *TypesToolSize) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *TypesToolSize) SetSize(v string) {
	o.Size = &v
}

func (o TypesToolSize) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TypesToolSize) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	return toSerialize, nil
}

type NullableTypesToolSize struct {
	value *TypesToolSize
	isSet bool
}

func (v NullableTypesToolSize) Get() *TypesToolSize {
	return v.value
}

func (v *NullableTypesToolSize) Set(val *TypesToolSize) {
	v.value = val
	v.isSet = true
}

func (v NullableTypesToolSize) IsSet() bool {
	return v.isSet
}

func (v *NullableTypesToolSize) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypesToolSize(val *TypesToolSize) *NullableTypesToolSize {
	return &NullableTypesToolSize{value: val, isSet: true}
}

func (v NullableTypesToolSize) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypesToolSize) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


