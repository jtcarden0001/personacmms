/*
PersonaCMMS API

This is the Personal Computer Maintenance Management System REST API.

API version: 1.0
Contact: greenrivercodelabs@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TypesDateTrigger type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TypesDateTrigger{}

// TypesDateTrigger struct for TypesDateTrigger
type TypesDateTrigger struct {
	ScheduledDate *string `json:"scheduled_date,omitempty"`
}

// NewTypesDateTrigger instantiates a new TypesDateTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypesDateTrigger() *TypesDateTrigger {
	this := TypesDateTrigger{}
	return &this
}

// NewTypesDateTriggerWithDefaults instantiates a new TypesDateTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypesDateTriggerWithDefaults() *TypesDateTrigger {
	this := TypesDateTrigger{}
	return &this
}

// GetScheduledDate returns the ScheduledDate field value if set, zero value otherwise.
func (o *TypesDateTrigger) GetScheduledDate() string {
	if o == nil || IsNil(o.ScheduledDate) {
		var ret string
		return ret
	}
	return *o.ScheduledDate
}

// GetScheduledDateOk returns a tuple with the ScheduledDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesDateTrigger) GetScheduledDateOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduledDate) {
		return nil, false
	}
	return o.ScheduledDate, true
}

// HasScheduledDate returns a boolean if a field has been set.
func (o *TypesDateTrigger) HasScheduledDate() bool {
	if o != nil && !IsNil(o.ScheduledDate) {
		return true
	}

	return false
}

// SetScheduledDate gets a reference to the given string and assigns it to the ScheduledDate field.
func (o *TypesDateTrigger) SetScheduledDate(v string) {
	o.ScheduledDate = &v
}

func (o TypesDateTrigger) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TypesDateTrigger) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScheduledDate) {
		toSerialize["scheduled_date"] = o.ScheduledDate
	}
	return toSerialize, nil
}

type NullableTypesDateTrigger struct {
	value *TypesDateTrigger
	isSet bool
}

func (v NullableTypesDateTrigger) Get() *TypesDateTrigger {
	return v.value
}

func (v *NullableTypesDateTrigger) Set(val *TypesDateTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableTypesDateTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableTypesDateTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypesDateTrigger(val *TypesDateTrigger) *NullableTypesDateTrigger {
	return &NullableTypesDateTrigger{value: val, isSet: true}
}

func (v NullableTypesDateTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypesDateTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


